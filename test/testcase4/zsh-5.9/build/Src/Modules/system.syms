E#ifndef have_Src_Modules_system_globals
E#define have_Src_Modules_system_globals
E
Lstatic int getposint _((char*instr,char*nam));
Lstatic int bin_sysread _((char*nam,char**args,Options ops,UNUSED(int func)));
Lstatic int bin_syswrite _((char*nam,char**args,Options ops,UNUSED(int func)));
Lstatic int bin_sysopen _((char*nam,char**args,Options ops,UNUSED(int func)));
Lstatic int bin_sysseek _((char*nam,char**args,Options ops,UNUSED(int func)));
Lstatic mnumber math_systell _((UNUSED(char*name),UNUSED(int argc),mnumber*argv,UNUSED(int id)));
Lstatic int bin_syserror _((char*nam,char**args,Options ops,UNUSED(int func)));
Lstatic int bin_zsystem_flock _((char*nam,char**args,UNUSED(Options ops),UNUSED(int func)));
Lstatic int bin_zsystem_supports _((char*nam,char**args,UNUSED(Options ops),UNUSED(int func)));
Lstatic int bin_zsystem _((char*nam,char**args,Options ops,int func));
Lstatic char**errnosgetfn _((UNUSED(Param pm)));
Lstatic void fillpmsysparams _((Param pm,const char*name));
Lstatic HashNode getpmsysparams _((UNUSED(HashTable ht),const char*name));
Lstatic void scanpmsysparams _((UNUSED(HashTable ht),ScanFunc func,int flags));
Eextern int setup_ _((UNUSED(Module m)));
Eextern int features_ _((Module m,char***features));
Eextern int enables_ _((Module m,int**enables));
Eextern int boot_ _((UNUSED(Module m)));
Eextern int cleanup_ _((Module m));
Eextern int finish_ _((UNUSED(Module m)));
E
E#endif /* !have_Src_Modules_system_globals */
